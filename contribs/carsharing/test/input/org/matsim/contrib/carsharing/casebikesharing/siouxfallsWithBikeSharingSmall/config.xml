<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd"
	[
		<!ENTITY OUTBASE "">
		<!ENTITY INBASE  "">
	]
>

<config>
	<module name="global" >
		<param name="coordinateSystem" value="Atlantis" /> <!-- Atlantis, CH1903_LV03 -->
		<param name="numberOfThreads" value="4" />
		<param name="randomSeed" value="4711" />
	</module>


	<module name="network">
		<param name="inputNetworkFile" value="network.xml" />
	</module>

	<module name="plans">
		<param name="inputPlansFile" value="population.xml" />
	</module>

	<module name="facilities" >
		<param name="inputFacilitiesFile" value="facilities.xml.gz" />
	</module>

<!-- ====================================================================== -->

	<module name="controler">
		<param name="firstIteration" value="0" />
		<param name="lastIteration" value="3" />
		<param name="outputDirectory" value="C:\output_test_sioux_small"/>
		<param name="eventsFileFormat" value="xml" />
		<param name="writeEventsInterval" value="1" />
		<param name="writePlansInterval" value="1" />

		<param name="mobsim" value="qsim" />
		<param name="overwriteFiles" value="deleteDirectoryIfExists" />
		
		<!--  
			gw: the following parameters are set additionally in the original carsharing test scenario:
			runId
			(travelTimeAggregator, travelTimeBinSize, travelTimeCalculator)
		 -->
	</module>

<!-- ====================================================================== -->

 	<module name="qsim" >
		<param name="startTime" value="00:00:00" /> <!--  gw: was not set in original carsharing test -->
		<param name="endTime" value="30:00:00" />
		<param name="flowCapacityFactor" value="0.7" /> <!--  gw: is set to 1 in original carsharing test scenario -->
		<param name="storageCapacityFactor" value="1.00" /> <!--  gw: is set to 10.0 in original carsharing test scenario -->
		
		<param name="numberOfThreads" value="1" />
		<param name = "snapshotperiod"	value = "00:00:10"/>

		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />

		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="3600.0" />
		<param name="timeStepSize" value="00:00:01" />

		<!-- `queue' for the standard queue model, `withHolesExperimental' (experimental!!) for the queue model with holes -->
		<param name="trafficDynamics" value="queue" />
		
		
		<!--  the following is from the carsharing test scenario (adapted) -->
		<param name="mainMode" value="car,freefloating,freefloating_vehicle"   />
		

	</module>

	<module name="planCalcScore">
        <param name="writeExperiencedPlans" value="true" />
        
        <!--  gw: additional parameters in carsharing test scenario: PathSizeLogitBeta -->

		<param name="BrainExpBeta" value="1.0" /> <!--  has value 2.0 in carsharing test scenario -->


		<!-- [utils] alternative-specific constant for pt.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
		<param name="constantPt" value="-0.124" />

		<!-- [utils] alternative-specific constant for car.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
		<param name="constantCar" value="-0.562" />

		<!-- [utils] alternative-specific constant for walk.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
		<param name="constantWalk" value="0.0" />

		<!-- [utils/hr] utility for departing early (i.e. before the earliest end time).  Probably implemented correctly, but not tested. -->
		<param name="earlyDeparture" value="0.0" />

		<!-- [utils/hr] utility for arriving late (i.e. after the latest start time).  normally negative -->
		<param name="lateArrival" value="0.0" />

		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />

		<!-- [utils/unit_of_money] conversion of money (e.g. toll, distance cost) into utils -->
		<param name="marginalUtilityOfMoney" value="0.062" />

		<!-- DISCOURAGED! [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility.  It is discouraged to use this but in some cases it may make sense. -->
		<param name="marginalUtlOfDistanceWalk" value="0.0" />

		<!-- [unit_of_money/m] conversion of car distance into money -->
		<param name="monetaryDistanceRateCar" value="-0.0004" />

		<!-- [unit_of_money/m] conversion of pt distance into money -->
		<param name="monetaryDistanceRatePt" value="0.0" />

		<!-- [utils/hr] marginal utility of doing an activity.  normally positive.  also the opportunity cost of time if agent is doing nothing. -->
		<param name="performing" value="0.96" />

		<!-- [utils/hr] additional marginal utility of traveling by car.  normally negative.  this comes on top of the opportunity cost of time -->
		<param name="traveling" value="0.0" />

		<!-- [utils/hr] additional marginal utility offset of traveling by pt.  normally negative.  this comes on top of the opportunity cost of time -->
		<param name="travelingPt" value="-0.18" />

		<!-- [utils/hr] additional marginal utility offset of traveling by foot.  normally negative.  this comes on top of the opportunity cost of time.  also see marginalUtlOfDistanceWalk -->
		<param name="travelingWalk" value="-1.14"/>

		<!-- [utils] utility of switching a line (= transfer penalty).  Normally negative -->
		<param name="utilityOfLineSwitch" value="0.0"/>

		<!-- [utils/hr] utility offset for waiting.  this comes on top of the opportunity cost of time.  Probably implemented correctly, but not tested. -->
		<param name="waitingPt" value="-0.18" />

		<param name="activityType_0"            value="home" /> <!-- home -->
		<param name="activityPriority_0"        value="1" />
		<param name="activityTypicalDuration_0" value="13:00:00" />
		<param name="activityMinimalDuration_0" value="01:00:00" />

		<param name="activityType_1"            value="work" />
		<param name="activityPriority_1"        value="1" />
		<param name="activityTypicalDuration_1" value="09:00:00" />
		<param name="activityMinimalDuration_1" value="08:00:00" />
		<param name="activityOpeningTime_1"     value="08:00:00" />
		<param name="activityEarliestEndTime_1" value="17:00:00" />
		<param name="activityLatestStartTime_1" value="09:00:00" />
		<param name="activityClosingTime_1" value="18:00:00" />

		<param name="activityType_2"            value="secondary" />
		<param name="activityPriority_2"        value="1" />
		<param name="activityTypicalDuration_2" value="01:00:00" />
		<param name="activityMinimalDuration_2" value="00:30:00" />
		<param name="activityOpeningTime_2"     value="08:00:00" />
		<param name="activityClosingTime_2" value="20:00:00" />
		
		<!--  gw: added for carsharing -->
		<param name="activityType_8" value="ff_interaction" />
		<param name="activityClosingTime_8" value="00:00:00" />
		<param name="activityEarliestEndTime_8" value="undefined" />
		<param name="activityLatestStartTime_8" value="undefined" />
		<param name="activityMinimalDuration_8" value="00:00:00" />
		<param name="activityOpeningTime_8" value="08:00:00" />
		<param name="activityTypicalDuration_8" value="00:02:00" />
		
		<param name="activityType_9" value="ow_interaction" />
		<param name="activityClosingTime_9" value="00:00:00" />
		<param name="activityEarliestEndTime_9" value="undefined" />
		<param name="activityLatestStartTime_9" value="undefined" />
		<param name="activityMinimalDuration_9" value="00:00:00" />
		<param name="activityOpeningTime_9" value="08:00:00" />
		<param name="activityTypicalDuration_9" value="00:02:00" />
		
		<param name="activityType_10" value="tw_interaction" />
		<param name="activityClosingTime_10" value="00:00:00" />
		<param name="activityEarliestEndTime_10" value="undefined" />
		<param name="activityLatestStartTime_10" value="undefined" />
		<param name="activityMinimalDuration_10" value="00:00:00" />
		<param name="activityOpeningTime_10" value="08:00:00" />
		<param name="activityTypicalDuration_10" value="00:02:00" />
		

	</module>

	<module name="strategy">
        <param name="maxAgentPlanMemorySize" value="5" /> <!-- 0 means unlimited -->

		<!--  gw: original parameters
		<param name="ModuleProbability_1" value="0.75" />
		<param name="Module_1" value="ChangeExpBeta" />

		<param name="ModuleProbability_2" value="0.05" />
		<param name="Module_2" value="ReRoute" />
		<param name="ModuleDisableAfterIteration_2" value="420" />

		<param name="ModuleProbability_3" value="0.05" />
 		<param name="Module_3" value="SubtourModeChoice"/>
		<param name="ModuleDisableAfterIteration_3" value="420" />

		<param name="ModuleProbability_4" value="0.05" />
		<param name="Module_4" value="TimeAllocationMutator" />
		<param name="ModuleDisableAfterIteration_4" value="420" />
		-->
		
		<parameterset type="strategysettings">
			<param name="strategyName" value="RandomTripToCarsharingStrategy" />
			<param name="weight" value="1.0" />
		</parameterset>
		
		<parameterset type="strategysettings">
			<param name="strategyName" value="CarsharingSubtourModeChoiceStrategy" />
			<param name="weight" value="0.0" /> <!-- gw: it seems that this is for two way carsharing, we don't need that -->
		</parameterset>
		
		<!--  gw: left out from carsharing test scenario config file: parameter ModuleDisableAfterIteration_n -->
		

	</module>
	
	

<!-- ====================================================================== -->

	<module name="TimeAllocationMutator" >
		<param name="mutationRange" value="3600.00" />
	</module>

<!-- ====================================================================== -->

	<module name="transitRouter" >

		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />

		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="500.0" />

		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="300.0" />

		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1500.0" />
	</module>


	<module name="subtourModeChoice" >

		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car,bike" />

		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="true" />

		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,bike,pt,walk" />
	</module>

  	<module name="transit">
  	  	<param name="useTransit" value="true" />
  	  	<param name="transitScheduleFile" value="schedule.xml" />
 		<param name="vehiclesFile" value="vehicles.xml" />
  	 	<param name="transitModes" value="pt,bus" />
  	</module>
  	

<!-- ====================================================================== -->
  	
  	
  	<!--  gw: added from carsharing config, don't know if that's correct ... (is transit still routed?) -->
  	
	<module name="planscalcroute" >

		<!-- All the modes for which the router is supposed to generate network routes (like car) -->
		<param name="networkModes" value="car" />

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="bike" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="4.166666666666667" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="walk" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="undefined" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="13.88888888888889" />
		</parameterset>

		
	</module>

  	
  	
<!-- ====================================================================== -->
  	
    <module name="Carsharing" >
		<param name="statsWriterFrequency" value="1" />
		<param name="vehiclelocations" value="&INBASE;CarsharingStations.xml" />
		<param name="membership" value="&INBASE;CSMembership.xml" />
	</module>


	<module name="FreeFloating" >
		<param name="areasFreefloating" value="&INBASE;freefloating_areas.xml" />
		<param name="useFreeFloating" value="true" />
		<param name="travelingFreeFloating" value="-0.1" />
		<param name="constantFreeFloating" value="-0.0" />
	</module>

	<module name="OneWayCarsharing" >
		<param name="vehiclelocationsOneWayCarsharing" value="&INBASE;Stations.txt" />
        <param name="useOneWayCarsharing" value="false" />
        <param name="travelingOneWayCarsharing" value="-10.0" />
		<param name="constantOneWayCarsharing" value="-0.4" />
	</module>

	<module name="TwoWayCarsharing" >
		<param name="vehiclelocationsTwoWayCarsharing" value="&INBASE;CarsharingStations.xml" />
        <param name="useTwoWayCarsharing" value="false" />
        <param name="travelingTwoWayCarsharing" value="-6.0" />
		<param name="constantTwoWayCarsharing" value="-0.4" />
	</module>
  	


</config>
